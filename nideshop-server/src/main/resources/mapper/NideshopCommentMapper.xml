<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!---->
<mapper namespace="com.wdk.nideshop.storage.dao.NideshopCommentMapper">
	<!--返回值映射-->
	<resultMap id="BaseResultMap" type="com.wdk.nideshop.model.NideshopComment">
		<id column="id" jdbcType="INTEGER" property="id"/>
		<result column="type_id" jdbcType="TINYINT" property="type_id"/>
		<result column="value_id" jdbcType="INTEGER" property="value_id"/>
		<result column="content" jdbcType="VARCHAR" property="content"/>
		<result column="add_time" jdbcType="BIGINT" property="add_time"/>
		<result column="status" jdbcType="TINYINT" property="status"/>
		<result column="user_id" jdbcType="INTEGER" property="user_id"/>
		<result column="new_content" jdbcType="VARCHAR" property="new_content"/>
	</resultMap>
	<!--查询数据库表开始-->
	<sql id="Base_Tables_Sql">
		nideshop_comment
	</sql>
	<!--查询数据库表结束-->
	<!--查询字段开始-->
	<sql id="Base_Column_Sql">
		id,type_id,value_id,content,add_time,status,user_id,new_content
	</sql>
	<!--查询字段结束-->
	<!--查询条件开始-->
	<sql id="Base_Where_Sql">
		<!---->
		<if test="id != null">
			and id=#{id,jdbcType=INTEGER}
		</if>
		<!---->
		<if test="type_id != null">
			and type_id=#{type_id,jdbcType=TINYINT}
		</if>
		<!---->
		<if test="value_id != null">
			and value_id=#{value_id,jdbcType=INTEGER}
		</if>
		<!--储存为base64编码-->
		<if test="content != null and content != ''">
			and content=#{content,jdbcType=VARCHAR}
		</if>
		<!---->
		<if test="add_time != null">
			and add_time=#{add_time,jdbcType=BIGINT}
		</if>
		<!---->
		<if test="status != null">
			and status=#{status,jdbcType=TINYINT}
		</if>
		<!---->
		<if test="user_id != null">
			and user_id=#{user_id,jdbcType=INTEGER}
		</if>
		<!---->
		<if test="new_content != null and new_content != ''">
			and new_content=#{new_content,jdbcType=VARCHAR}
		</if>
	</sql>
	<!--查询条件结束-->
	<!--查询条件开始-->
	<sql id="Base_Where_Db_Sql">
		<!---->
		<if test="id != null">
			and id=#{id,jdbcType=INTEGER}
		</if>
		<!---->
		<if test="type_id != null">
			and type_id=#{type_id,jdbcType=TINYINT}
		</if>
		<!---->
		<if test="value_id != null">
			and value_id=#{value_id,jdbcType=INTEGER}
		</if>
		<!--储存为base64编码-->
		<if test="content != null and content != ''">
			and content=#{content,jdbcType=VARCHAR}
		</if>
		<!---->
		<if test="add_time != null">
			and add_time=#{add_time,jdbcType=BIGINT}
		</if>
		<!---->
		<if test="status != null">
			and status=#{status,jdbcType=TINYINT}
		</if>
		<!---->
		<if test="user_id != null">
			and user_id=#{user_id,jdbcType=INTEGER}
		</if>
		<!---->
		<if test="new_content != null and new_content != ''">
			and new_content=#{new_content,jdbcType=VARCHAR}
		</if>
	</sql>
	<!--查询条件结束-->
	<!--根据条件查询列表开始-->
	<select id="selectListByMapReturnMap" parameterType="java.util.Map" resultType="java.util.Map">
		select
		<include refid="Base_Column_Sql"/>
		from  
		<include refid="Base_Tables_Sql"/>
		<where>
			<include refid="Base_Where_Db_Sql"/>
		</where>
	</select>
	<!--根据条件查询列表结束-->
	<!--根据条件查询列表开始-->
	<select id="selectListByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_Sql"/>
		from  
		<include refid="Base_Tables_Sql"/>
		<where>
			<include refid="Base_Where_Sql"/>
		</where>
	</select>
	<!--根据条件查询列表结束-->
	<!--根据条件查询列表开始-->
	<select id="list" parameterType="com.wdk.nideshop.model.NideshopComment" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_Sql"/>
		from  
		<include refid="Base_Tables_Sql"/>
		<where>
			<include refid="Base_Where_Sql"/>
		</where>
	</select>
	<!--根据条件查询列表结束-->
	<!--根据条件查询列表开始-->
	<select id="count" parameterType="com.wdk.nideshop.model.NideshopComment" resultType="java.lang.Integer">
		select count(*)

		from  
		<include refid="Base_Tables_Sql"/>
		<where>
			<include refid="Base_Where_Sql"/>
		</where>
	</select>
	<!--根据条件查询列表结束-->
	<!--新增表数据开始-->
	<insert id="insert" parameterType="com.wdk.nideshop.model.NideshopComment">
		<selectKey keyProperty="id" order="AFTER">SELECT LAST_INSERT_ID()</selectKey>
		insert into nideshop_comment (
			type_id,value_id,content,
			add_time,status,user_id,
			new_content
		)
		values (
			
			#{type_id,jdbcType=TINYINT},#{value_id,jdbcType=INTEGER},#{content,jdbcType=VARCHAR},
			#{add_time,jdbcType=BIGINT},#{status,jdbcType=TINYINT},#{user_id,jdbcType=INTEGER},
			#{new_content,jdbcType=VARCHAR}
		)
	
	</insert>
	<!--新增表数据结束-->
	<!--新增表不为空数据开始-->
	<insert id="insertSelective" parameterType="com.wdk.nideshop.model.NideshopComment">
		<selectKey keyProperty="id" order="AFTER">SELECT LAST_INSERT_ID()</selectKey>
		insert into nideshop_comment (
		<!---->
		<if test="type_id != null">
			type_id,
		</if>
		<!---->
		<if test="value_id != null">
			value_id,
		</if>
		<!--储存为base64编码-->
		<if test="content != null and content != ''">
			content=#{content,jdbcType=VARCHAR},
		</if>
		<!---->
		<if test="add_time != null">
			add_time,
		</if>
		<!---->
		<if test="status != null">
			status,
		</if>
		<!---->
		<if test="user_id != null">
			user_id,
		</if>
		<!---->
		<if test="new_content != null and new_content != ''">
			new_content=#{new_content,jdbcType=VARCHAR},
		</if>
		)
		values (
		<!---->
		<if test="type_id != null">
			#{type_id,jdbcType=TINYINT},
		</if>
		<!---->
		<if test="value_id != null">
			#{value_id,jdbcType=INTEGER},
		</if>
		<!--储存为base64编码-->
		<if test="content != null and content != ''">
			content=#{content,jdbcType=VARCHAR},
		</if>
		<!---->
		<if test="add_time != null">
			#{add_time,jdbcType=BIGINT},
		</if>
		<!---->
		<if test="status != null">
			#{status,jdbcType=TINYINT},
		</if>
		<!---->
		<if test="user_id != null">
			#{user_id,jdbcType=INTEGER},
		</if>
		<!---->
		<if test="new_content != null and new_content != ''">
			new_content=#{new_content,jdbcType=VARCHAR},
		</if>
		)
	
	</insert>
	<!--新增表不为空数据结束-->
	<!--批量新增表数据开始-->
	<insert id="batchInsert" parameterType="java.util.List">
		<selectKey keyProperty="id" order="AFTER">SELECT LAST_INSERT_ID()</selectKey>
		<if test="list != null and list.size != 0">
			insert into nideshop_comment (
				type_id,value_id,content,
				add_time,status,user_id,
				new_content
			)
			values
			<foreach collection="list" item="item" index="index" separator=",">
				(
				#{item.type_id,jdbcType=TINYINT},#{item.value_id,jdbcType=INTEGER},#{item.content,jdbcType=VARCHAR},
				#{item.add_time,jdbcType=BIGINT},#{item.status,jdbcType=TINYINT},#{item.user_id,jdbcType=INTEGER},
				#{item.new_content,jdbcType=VARCHAR}
				)
			</foreach>
		</if>
	</insert>
	<!--批量新增表数据结束-->
	<!--根据条件查询列表开始-->
	<select id="selectByPrimaryKey" parameterType="com.wdk.nideshop.model.NideshopComment" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_Sql"/>
		from  
		<include refid="Base_Tables_Sql"/>
		<where>id=#{id,jdbcType=INTEGER}</where>
	</select>
	<!--根据条件查询列表结束-->
	<!--根据主键更新数据开始-->
	<update id="updateByPrimaryKey" parameterType="com.wdk.nideshop.model.NideshopComment">
		update nideshop_comment
		set  
			type_id=#{type_id,jdbcType=TINYINT},
			value_id=#{value_id,jdbcType=INTEGER},
			content=#{content,jdbcType=VARCHAR},
			add_time=#{add_time,jdbcType=BIGINT},
			status=#{status,jdbcType=TINYINT},
			user_id=#{user_id,jdbcType=INTEGER},
			new_content=#{new_content,jdbcType=VARCHAR}
		<where>id=#{id,jdbcType=INTEGER}</where>
	</update>
	<!--根据主键更新数据结束-->
	<!--根据主键更新不为空数据开始-->
	<!--更新不为空-->
	<update id="updateSelectiveByPrimaryKey" parameterType="com.wdk.nideshop.model.NideshopComment">
		update nideshop_comment
		<set>
			<!---->
			<if test="type_id != null">
				type_id=#{type_id,jdbcType=TINYINT},
			</if>
			<!---->
			<if test="value_id != null">
				value_id=#{value_id,jdbcType=INTEGER},
			</if>
			<!--储存为base64编码-->
			<if test="content != null and content != ''">
				content=#{content,jdbcType=VARCHAR},
			</if>
			<!---->
			<if test="add_time != null">
				add_time=#{add_time,jdbcType=BIGINT},
			</if>
			<!---->
			<if test="status != null">
				status=#{status,jdbcType=TINYINT},
			</if>
			<!---->
			<if test="user_id != null">
				user_id=#{user_id,jdbcType=INTEGER},
			</if>
			<!---->
			<if test="new_content != null and new_content != ''">
				new_content=#{new_content,jdbcType=VARCHAR},
			</if>
		</set>
		<!--主键查询-->
		<where>id=#{id,jdbcType=INTEGER}</where>
	</update>
	<!--根据主键更新不为空数据结束-->
	<!--根据主键存在就更新，不存在就新增开始-->
	<!--批量新增，存在就更新，不存在就插入-->
	<insert id="batchInsertUpdate" parameterType="java.util.List">
		<selectKey keyProperty="id" order="AFTER">SELECT LAST_INSERT_ID()</selectKey>
		<if test="list !=null and list.size != 0">
			insert into  nideshop_comment(
				type_id,value_id,content,
				add_time,status,user_id,
				new_content
			)
			values 
 			<foreach collection="list" item="item" index="index" separator=",">
				(
				#{item.type_id,jdbcType=TINYINT},#{item.value_id,jdbcType=INTEGER},#{item.content,jdbcType=VARCHAR},
				#{item.add_time,jdbcType=BIGINT},#{item.status,jdbcType=TINYINT},#{item.user_id,jdbcType=INTEGER},
				#{item.new_content,jdbcType=VARCHAR})
			</foreach>
				ON DUPLICATE KEY UPDATE
				type_id=#{type_id,jdbcType=TINYINT},
				value_id=#{value_id,jdbcType=INTEGER},
				content=#{content,jdbcType=VARCHAR},
				add_time=#{add_time,jdbcType=BIGINT},
				status=#{status,jdbcType=TINYINT},
				user_id=#{user_id,jdbcType=INTEGER},
				new_content=#{new_content,jdbcType=VARCHAR}
		</if>
	</insert>
	<!--根据主键存在就更新，不存在就新增结束-->
	<!--批量更新开始-->
	<update id="batchUpdate">
		<if test="list != null and list.size != 0">
			update nideshop_comment
			<trim prefix="set" suffixOverrides=",">
				<!---->
				<trim prefix=" type_id = case " suffix="end,">
					<foreach collection="list" item="item" index="index">
						<if test="item.type_id!=null">
							when id=#{item.type_id,jdbcType=INTEGER}
							then #{item.type_id,jdbcType=TINYINT}
						</if>
					</foreach>
				</trim>
				<!---->
				<trim prefix=" value_id = case " suffix="end,">
					<foreach collection="list" item="item" index="index">
						<if test="item.value_id!=null">
							when id=#{item.value_id,jdbcType=INTEGER}
							then #{item.value_id,jdbcType=INTEGER}
						</if>
					</foreach>
				</trim>
				<!--储存为base64编码-->
				<trim prefix=" content = case " suffix="end,">
					<foreach collection="list" item="item" index="index">
						<if test="item.content!=null">
							when id=#{item.content,jdbcType=INTEGER}
							then #{item.content,jdbcType=VARCHAR}
						</if>
					</foreach>
				</trim>
				<!---->
				<trim prefix=" add_time = case " suffix="end,">
					<foreach collection="list" item="item" index="index">
						<if test="item.add_time!=null">
							when id=#{item.add_time,jdbcType=INTEGER}
							then #{item.add_time,jdbcType=BIGINT}
						</if>
					</foreach>
				</trim>
				<!---->
				<trim prefix=" status = case " suffix="end,">
					<foreach collection="list" item="item" index="index">
						<if test="item.status!=null">
							when id=#{item.status,jdbcType=INTEGER}
							then #{item.status,jdbcType=TINYINT}
						</if>
					</foreach>
				</trim>
				<!---->
				<trim prefix=" user_id = case " suffix="end,">
					<foreach collection="list" item="item" index="index">
						<if test="item.user_id!=null">
							when id=#{item.user_id,jdbcType=INTEGER}
							then #{item.user_id,jdbcType=INTEGER}
						</if>
					</foreach>
				</trim>
				<!---->
				<trim prefix=" new_content = case " suffix="end,">
					<foreach collection="list" item="item" index="index">
						<if test="item.new_content!=null">
							when id=#{item.new_content,jdbcType=INTEGER}
							then #{item.new_content,jdbcType=VARCHAR}
						</if>
					</foreach>
				</trim>
			</trim>
			<where>
				<foreach collection="list" separator="or" item="item" index="index">
					id=#{item.id,jdbcType=INTEGER}
				</foreach>
			</where>
		</if>
	</update>
	<!--批量更新结束-->
	<!--删除表数据开始-->
	<delete id="deleteByPrimaryKey" parameterType="java.util.Map">
		delete from nideshop_comment
		<!--主键查询-->
		<where>id=#{id,jdbcType=INTEGER}</where>
	</delete>
	<!--删除表数据结束-->
	<!--删除表数据开始-->
	<delete id="deleteBySelect" parameterType="com.wdk.nideshop.model.NideshopComment">
		delete from nideshop_comment
		<where>
			<include refid="Base_Where_Sql"/>
		</where>
	</delete>
	<!--删除表数据结束-->
</mapper>
